{"version":3,"sources":["containers/resetPassword/ResetPasswordComponent.tsx","containers/resetPassword/index.ts"],"names":["__WEBPACK_IMPORTED_MODULE_0_react__","__webpack_require__","__WEBPACK_IMPORTED_MODULE_0_react___default","n","__WEBPACK_IMPORTED_MODULE_1_react_redux__","__WEBPACK_IMPORTED_MODULE_2_react_router_dom__","__WEBPACK_IMPORTED_MODULE_3_react_router_redux__","__WEBPACK_IMPORTED_MODULE_4_src_config__","__WEBPACK_IMPORTED_MODULE_5_react_localize_redux__","__WEBPACK_IMPORTED_MODULE_6__material_ui_core_Paper__","__WEBPACK_IMPORTED_MODULE_7__material_ui_core_TextField__","__WEBPACK_IMPORTED_MODULE_8__material_ui_core_Button__","__WEBPACK_IMPORTED_MODULE_9__material_ui_core_styles__","__WEBPACK_IMPORTED_MODULE_10__material_ui_core_Typography__","__WEBPACK_IMPORTED_MODULE_11__material_ui_core__","__WEBPACK_IMPORTED_MODULE_12_src_store_actions_authorizeActions__","__webpack_exports__","Object","state","ownProps","translate","get","dispatch","loginPage","resetPassword","emailAddress","theme","textField","minWidth","marginTop","caption","contain","margin","paper","minHeight","maxWidth","textAlign","display","[object Object]","props","super","this","handleInputChange","event","target","value","type","checked","name","setState","emailInput","handleForm","emailInputError","bind","classes","a","createElement","container","item","xs","className","settings","appName","elevation","style","padding","paddingLeft","paddingRight","autoFocus","onChange","helperText","error","trim","label","onClick","variant","color","component","defineProperty","__WEBPACK_IMPORTED_MODULE_0__ResetPasswordComponent__"],"mappings":"oDAAA,IAAAA,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,IAAAI,EAAAJ,EAAA,KAAAK,EAAAL,EAAA,IAAAM,EAAAN,EAAA,KAAAO,EAAAP,EAAA,IAAAQ,EAAAR,EAAA,IAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,IAAAW,EAAAX,EAAA,IAAAY,EAAAZ,EAAA,IAAAa,EAAAb,EAAA,KAAAc,EAAAd,EAAA,KA0Lee,EAAA,EAAAC,OAAAZ,EAAA,GAAgBY,OAAAb,EAAA,EAAAa,CAPP,CAACC,EAAYC,MAEjCC,UAAWH,OAAAT,EAAA,EAAAS,CAAaC,EAAMG,IAAI,aAjBX,CAACC,EAAoBH,MAE5CI,UAAW,KACTD,EAASL,OAAAX,EAAA,EAAAW,CAAK,YAEhBO,cAAgBC,GAAyBH,EAASP,EAAA,gBAAiCU,MAiBxDR,CAA6CA,OAAAL,EAAA,EAAAK,CApK5DS,KACdC,WACEC,SAAU,IACVC,UAAW,IAGbC,SACED,UAAW,IAEbE,SACEC,OAAQ,UAEVC,OACEC,UAAW,IACXC,SAAU,IACVP,SAAU,IACVQ,UAAW,SACXC,QAAS,QACTL,OAAQ,UAkJgEf,eAvIhCjB,EAAA,UAM1CsC,YAAaC,GACXC,MAAMD,GAgBRE,KAAAC,kBAAoB,CAACC,IACnB,MAAMC,EAASD,EAAMC,OACfC,EAAwB,aAAhBD,EAAOE,KAAsBF,EAAOG,QAAUH,EAAOC,MACtDD,EAAOI,KACpBP,KAAKQ,UACHC,WAAYL,MAQhBJ,KAAAU,WAAa,MACX,MAAM/B,UAACA,GAAaqB,KAAKF,MAEK,KAA1BE,KAAKvB,MAAMgC,WAQfT,KAAKF,MAAMf,cAAeiB,KAAKvB,MAAMgC,YAPnCT,KAAKQ,UACHG,gBAAiBhC,EAAW,wCAhChCqB,KAAKvB,OACHgC,WAAY,GACZE,gBAAiB,IAInBX,KAAKU,WAAaV,KAAKU,WAAWE,KAAKZ,MAuCzCH,SAEE,MAAMgB,QAACA,EAAOlC,UAAEA,GAAaqB,KAAKF,MAElC,OACErC,EAAAqD,EAAAC,cAAC1C,EAAA,GAAK2C,WAAS,GACfvD,EAAAqD,EAAAC,cAAC1C,EAAA,GAAK4C,MAAI,EAACC,GAAI,GAAIC,UAAWN,EAAQvB,SAEpC7B,EAAAqD,EAAAC,cAAA,MAAII,UAAU,eAAerD,EAAA,EAAOsD,SAASC,SAE7C5D,EAAAqD,EAAAC,cAAA,OAAKI,UAAU,kBACb1D,EAAAqD,EAAAC,cAAC/C,EAAA,GAAMmD,UAAWN,EAAQrB,MAAO8B,UAAW,GAC1C7D,EAAAqD,EAAAC,cAAA,OAAKQ,OAASC,QAAS,mBACrB/D,EAAAqD,EAAAC,cAAA,OAAKQ,OACHE,YAAa,OACbC,aAAc,SAGdjE,EAAAqD,EAAAC,cAAA,MAAII,UAAU,0CAA0CxC,EAAW,yBAGrElB,EAAAqD,EAAAC,cAAC9C,EAAA,GACDkD,UAAWN,EAAQ3B,UACnByC,WAAS,EACPC,SAAU5B,KAAKC,kBACf4B,WAAY7B,KAAKvB,MAAMkC,gBACvBmB,MAA6C,KAAtC9B,KAAKvB,MAAMkC,gBAAgBoB,OAClCxB,KAAK,aACLyB,MAAOrD,EAAW,4BAClB0B,KAAK,UACL5C,EAAAqD,EAAAC,cAAA,WACFtD,EAAAqD,EAAAC,cAAA,WACAtD,EAAAqD,EAAAC,cAAA,WACAtD,EAAAqD,EAAAC,cAAA,OAAKI,UAAU,wBACb1D,EAAAqD,EAAAC,cAAA,WACEtD,EAAAqD,EAAAC,cAAC7C,EAAA,GAAO+D,QAASjC,KAAKF,MAAMhB,WAAYH,EAAW,8BAErDlB,EAAAqD,EAAAC,cAAA,WACEtD,EAAAqD,EAAAC,cAAC7C,EAAA,GAAOgE,QAAQ,YAAYC,MAAM,UAAUF,QAASjC,KAAKU,YAAa/B,EAAW,4CAGtFlB,EAAAqD,EAAAC,cAAC3C,EAAA,GAAW+C,UAAWN,EAAQxB,QAAS6C,QAAQ,UAAUE,UAAU,KACnEzD,EAAW,0ECnJ1BH,OAAA6D,eAAA9D,EAAA,cAAA6B,OAAA,QAAAkC,EAAA9E,EAAA,MACee,EAAA,QAAA+D,EAAsB","file":"static/js/3.9e1c5769.chunk.js","sourcesContent":["// - Import external components\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { NavLink, withRouter } from 'react-router-dom'\nimport { push } from 'react-router-redux'\nimport config from 'src/config'\nimport { getTranslate, getActiveLanguage } from 'react-localize-redux'\n\n// - Material UI\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport RaisedButton from '@material-ui/core/Button'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport { Grid } from '@material-ui/core'\n\n// - Import actions\nimport * as authorizeActions from 'src/store/actions/authorizeActions'\nimport { IResetPasswordComponentProps } from './IResetPasswordComponentProps'\nimport { IResetPasswordComponentState } from './IResetPasswordComponentState'\n\nconst styles = (theme: any) => ({\n  textField: {\n    minWidth: 280,\n    marginTop: 20\n\n  },\n  caption: {\n    marginTop: 30\n  },\n  contain: {\n    margin: '0 auto'\n  },\n  paper: {\n    minHeight: 370,\n    maxWidth: 450,\n    minWidth: 337,\n    textAlign: 'center',\n    display: 'block',\n    margin: 'auto'\n  }\n})\n\n/**\n * Create component class\n *\n * @export\n * @class ResetPasswordComponent\n * @extends {Component}\n */\nexport class ResetPasswordComponent extends Component<IResetPasswordComponentProps,IResetPasswordComponentState> {\n\n  /**\n   * Component constructor\n   * @param  {object} props is an object properties of component\n   */\n  constructor (props: IResetPasswordComponentProps) {\n    super(props)\n\n    this.state = {\n      emailInput: '',\n      emailInputError: ''\n\n    }\n    // Binding function to `this`\n    this.handleForm = this.handleForm.bind(this)\n\n  }\n\n  /**\n   * Handle data on input change\n   * @param  {event} evt is an event of inputs of element on change\n   */\n  handleInputChange = (event: any) => {\n    const target = event.target\n    const value = target.type === 'checkbox' ? target.checked : target.value\n    const name = target.name\n    this.setState({\n      emailInput: value\n    })\n\n  }\n\n  /**\n   * Handle register form\n   */\n  handleForm = () => {\n    const {translate} = this.props\n    let error = false\n    if (this.state.emailInput === '') {\n      this.setState({\n        emailInputError: translate!('resetPassword.emailRequiredError')\n      })\n\n      return\n    }\n\n    this.props.resetPassword!(this.state.emailInput)\n  }\n\n  /**\n   * Reneder component DOM\n   * @return {react element} return the DOM which rendered by component\n   */\n  render () {\n\n    const {classes, translate} = this.props\n\n    return (\n      <Grid container>\n      <Grid item xs={12} className={classes.contain}>\n\n        <h1 className='g__app-name'>{config.settings.appName}</h1>\n\n        <div className='animate-bottom'>\n          <Paper className={classes.paper} elevation={1}>\n            <div style={{ padding: '48px 40px 36px' }}>\n              <div style={{\n                paddingLeft: '40px',\n                paddingRight: '40px'\n              }}>\n\n                <h2 className='zoomOutLCorner animated g__paper-title'>{translate!('resetPassword.title')}</h2>\n              </div>\n\n              <TextField\n              className={classes.textField}\n              autoFocus\n                onChange={this.handleInputChange}\n                helperText={this.state.emailInputError}\n                error={this.state.emailInputError.trim() !== ''}\n                name='emailInput'\n                label={translate!('resetPassword.emailLabel')}\n                type='email'\n              /><br />\n              <br />\n              <br />\n              <div className='settings__button-box'>\n                <div>\n                  <Button onClick={this.props.loginPage}>{translate!('resetPassword.backButton')}</Button>\n                </div>\n                <div>\n                  <Button variant='contained' color='primary' onClick={this.handleForm}>{translate!('resetPassword.resetPasswordButton')} </Button>\n                </div>\n              </div>\n              <Typography className={classes.caption} variant='caption' component='p'>\n              {translate!('resetPassword.description')}\n          </Typography>\n            </div>\n          </Paper>\n        </div>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\n/**\n * Map dispatch to props\n * @param  {func} dispatch is the function to dispatch action to reducers\n * @param  {object} ownProps is the props belong to component\n * @return {object}          props of component\n */\nconst mapDispatchToProps = (dispatch: Function, ownProps: IResetPasswordComponentProps) => {\n  return {\n    loginPage: () => {\n      dispatch(push('/login'))\n    },\n    resetPassword: (emailAddress: string) => dispatch(authorizeActions.dbResetPassword(emailAddress))\n  }\n}\n\n/**\n * Map state to props\n * @param  {object} state is the obeject from redux store\n * @param  {object} ownProps is the props belong to component\n * @return {object}          props of component\n */\nconst mapStateToProps = (state: any, ownProps: IResetPasswordComponentProps) => {\n  return {\n    translate: getTranslate(state.get('locale')),\n  }\n}\n\n// - Connect component to redux store\nexport default withRouter<any>(connect(mapStateToProps, mapDispatchToProps)(withStyles(styles as any)(ResetPasswordComponent as any) as any)) as typeof ResetPasswordComponent\n\n\n\n// WEBPACK FOOTER //\n// ./src/containers/resetPassword/ResetPasswordComponent.tsx","import ResetPasswordComponent from './ResetPasswordComponent'\nexport default ResetPasswordComponent\n\n\n\n// WEBPACK FOOTER //\n// ./src/containers/resetPassword/index.ts"],"sourceRoot":""}