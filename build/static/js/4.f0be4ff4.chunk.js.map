{"version":3,"sources":["containers/login/LoginComponent.tsx","containers/login/index.ts"],"names":["__WEBPACK_IMPORTED_MODULE_0_react__","__webpack_require__","__WEBPACK_IMPORTED_MODULE_0_react___default","n","__WEBPACK_IMPORTED_MODULE_1_react_redux__","__WEBPACK_IMPORTED_MODULE_2_react_router_dom__","__WEBPACK_IMPORTED_MODULE_3_react_router_redux__","__WEBPACK_IMPORTED_MODULE_4__material_ui_core_Paper__","__WEBPACK_IMPORTED_MODULE_5__material_ui_core_TextField__","__WEBPACK_IMPORTED_MODULE_6__material_ui_core_Button__","__WEBPACK_IMPORTED_MODULE_7__material_ui_core_IconButton__","__WEBPACK_IMPORTED_MODULE_8__material_ui_core_Divider__","__WEBPACK_IMPORTED_MODULE_9__material_ui_core_styles__","__WEBPACK_IMPORTED_MODULE_10_src_config__","__WEBPACK_IMPORTED_MODULE_11_react_localize_redux__","__WEBPACK_IMPORTED_MODULE_12_src_store_actions_authorizeActions__","__WEBPACK_IMPORTED_MODULE_13_src_core_domain_authorize__","__WEBPACK_IMPORTED_MODULE_14__material_ui_core_Grid_Grid__","__WEBPACK_IMPORTED_MODULE_14__material_ui_core_Grid_Grid___default","__WEBPACK_IMPORTED_MODULE_15_api_CommonAPI__","__webpack_exports__","Object","state","ownProps","dispatch","login","email","password","loginWithOAuth","type","signupPage","theme","textField","minWidth","marginTop","contain","margin","paper","minHeight","maxWidth","textAlign","display","bottomPaper","fontSize","link","color","[object Object]","props","super","this","styles","singinOptions","paddingBottom","justifyContent","divider","marginBottom","handleEmailInputChange","event","target","value","checked","name","setState","emailInput","emailInputError","confirmInputError","passwordInputError","handlePasswordInputChange","passwordInput","handleForm","translate","error","bind","classes","OAuthLogin","a","createElement","style","onClick","FACEBOOK","className","GOOGLE","GITHUB","container","item","xs","settings","appName","elevation","padding","paddingLeft","paddingRight","enabledOAuthLogin","autoFocus","onChange","helperText","trim","label","tabIndex","variant","to","getStateSlice","defineProperty","__WEBPACK_IMPORTED_MODULE_0__LoginComponent__"],"mappings":"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","file":"static/js/4.f0be4ff4.chunk.js","sourcesContent":["// - Import external components\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { NavLink, withRouter } from 'react-router-dom'\nimport { push } from 'react-router-redux'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport RaisedButton from '@material-ui/core/Button'\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport Divider from '@material-ui/core/Divider'\nimport ActionAndroid from '@material-ui/icons/Android'\nimport { withStyles } from '@material-ui/core/styles'\nimport config from 'src/config'\nimport { localize } from 'react-localize-redux'\n\n// - Import actions\nimport * as authorizeActions from 'src/store/actions/authorizeActions'\nimport { ILoginComponentProps } from './ILoginComponentProps'\nimport { ILoginComponentState } from './ILoginComponentState'\nimport { OAuthType } from 'src/core/domain/authorize'\nimport Grid from '@material-ui/core/Grid/Grid'\nimport CommonAPI from 'api/CommonAPI'\n\nconst styles = (theme: any) => ({\n  textField: {\n    minWidth: 280,\n    marginTop: 20\n  },\n  contain: {\n    margin: '0 auto'\n  },\n  paper: {\n    minHeight: 370,\n    maxWidth: 450,\n    minWidth: 337,\n    textAlign: 'center',\n    display: 'block',\n    margin: 'auto'\n  },\n  bottomPaper: {\n    display: 'inherit',\n    fontSize: 'small',\n    marginTop: '50px'\n  },\n  link: {\n    color: '#0095ff',\n    display: 'inline-block'\n  }\n})\n\n// - Create Login component class\nexport class LoginComponent extends Component<ILoginComponentProps, ILoginComponentState> {\n\n  styles = {\n    singinOptions: {\n      paddingBottom: 10,\n      justifyContent: 'space-around',\n      display: 'flex'\n    },\n    divider: {\n      marginBottom: 10,\n      marginTop: 15\n    }\n  }\n\n  /**\n   * Component constructor\n   * @param  {object} props is an object properties of component\n   */\n  constructor(props: ILoginComponentProps) {\n    super(props)\n\n    this.state = {\n      emailInput: '',\n      emailInputError: '',\n      passwordInput: '',\n      passwordInputError: '',\n      confirmInputError: ''\n    }\n\n    // Binding function to `this`\n    this.handleForm = this.handleForm.bind(this)\n    \n  }\n\n  /**\n   * Handle data on input change\n   * @param  {event} evt is an event of inputs of element on change\n   */\n  handleEmailInputChange = (event: any) => {\n    const target = event.target\n    const value = target.type === 'checkbox' ? target.checked : target.value\n    const name = target.name\n    this.setState({\n      emailInput: value\n    })\n    switch (name) {\n      case 'emailInput':\n        this.setState({\n          emailInputError: ''\n        })\n        break\n      case 'passwordInput':\n        this.setState({\n          confirmInputError: '',\n          passwordInputError: ''\n        })\n\n        break\n      default:\n\n    }\n  }\n  \n  /**\n   * Handle data on input change\n   * @param  {event} evt is an event of inputs of element on change\n   */\n  handlePasswordInputChange = (event: any) => {\n    const target = event.target\n    const value = target.type === 'checkbox' ? target.checked : target.value\n    const name = target.name\n    this.setState({\n      passwordInput: value\n    })\n    switch (name) {\n      case 'emailInput':\n        this.setState({\n          emailInputError: ''\n        })\n        break\n      case 'passwordInput':\n        this.setState({\n          confirmInputError: '',\n          passwordInputError: ''\n        })\n\n        break\n      default:\n\n    }\n  }\n  /**\n   * Handle register form\n   */\n  handleForm = () => {\n    const { translate } = this.props\n    let error = false\n    if (this.state.emailInput === '') {\n      this.setState({\n        emailInputError: translate!('login.emailRequiredError')\n      })\n      error = true\n\n    }\n    if (this.state.passwordInput === '') {\n      this.setState({\n        passwordInputError: translate!('login.passwordRequiredError')\n      })\n      error = true\n\n    }\n\n    if (!error) {\n      this.props.login!(\n        this.state.emailInput,\n        this.state.passwordInput\n      )\n    }\n\n  }\n\n  /**\n   * Reneder component DOM\n   * @return {react element} return the DOM which rendered by component\n   */\n  render() {\n    const { classes, loginWithOAuth, translate } = this.props\n\n    const OAuthLogin = (\n      <div style={this.styles.singinOptions as any}>\n        <IconButton\n          onClick={() => loginWithOAuth!(OAuthType.FACEBOOK)}\n        ><div className='icon-fb icon'></div></IconButton>\n        <IconButton\n          onClick={() => loginWithOAuth!(OAuthType.GOOGLE)}\n        > <div className='icon-google icon'></div> </IconButton>\n        <IconButton\n          onClick={() => loginWithOAuth!(OAuthType.GITHUB)}\n        > <div className='icon-github icon'></div> </IconButton>\n  \n      </div>\n    )\n\n    return (\n      <Grid container>\n        <Grid item xs={12} className={classes.contain}>\n\n          <h1 className='g__app-name'>{config.settings.appName}</h1>\n\n          <div className='animate-bottom'>\n            <Paper className={classes.paper} elevation={1} >\n              <form>\n                <div style={{ padding: '48px 40px 36px' }}>\n                  <div style={{\n                    paddingLeft: '40px',\n                    paddingRight: '40px'\n                  }}>\n\n                    <h2 className='zoomOutLCorner animated g__paper-title'>{translate!('login.title')}</h2>\n                  </div>\n                  {config.settings.enabledOAuthLogin ? OAuthLogin : ''}\n                \n                  <Divider style={this.styles.divider} />\n                  <TextField\n                    className={classes.textField}\n                    autoFocus\n                    onChange={this.handleEmailInputChange}\n                    helperText={this.state.emailInputError}\n                    error={this.state.emailInputError.trim() !== ''}\n                    name='emailInput'\n                    label={translate!('login.emailLabel')}\n                    type='email'\n                    tabIndex={1}\n                  /><br />\n                  <TextField\n                    className={classes.textField}\n                    onChange={this.handlePasswordInputChange}\n                    helperText={this.state.passwordInputError}\n                    error={this.state.passwordInputError.trim() !== ''}\n                    name='passwordInput'\n                    label={translate!('login.passwordLabel')}\n                    type='password'\n                    tabIndex={2}\n                  /><br />\n                  <br />\n                  <br />\n                  <div className='login__button-box'>\n                    <div>\n                      <Button onClick={this.props.signupPage} tabIndex={4}>{translate!('login.createAccountButton')}</Button>\n                    </div>\n                    <div >\n                      <Button variant='contained' color='primary' onClick={this.handleForm} tabIndex={3} >{translate!('login.loginButton')}</Button>\n                    </div>\n                  </div>\n                  <span className={classes.bottomPaper}>{translate!('login.forgetPasswordMessage')} <NavLink to='/resetPassword' className={classes.link}>{translate!('login.resetPasswordLabel')}</NavLink></span>\n                </div>\n              </form>\n            </Paper>\n          </div>\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\n/**\n * Map dispatch to props\n * @param  {func} dispatch is the function to dispatch action to reducers\n * @param  {object} ownProps is the props belong to component\n * @return {object}          props of component\n */\nconst mapDispatchToProps = (dispatch: any, ownProps: ILoginComponentProps) => {\n  return {\n    login: (email: string, password: string) => {\n      dispatch(authorizeActions.dbLogin(email, password))\n    },\n    loginWithOAuth: (type: OAuthType) => dispatch(authorizeActions.dbLoginWithOAuth(type)),\n    signupPage: () => {\n      dispatch(push('/signup'))\n    }\n  }\n}\n\n/**\n * Map state to props\n */\nconst mapStateToProps = (state: any, ownProps: ILoginComponentProps) => {\n  return {\n  }\n}\n\n// - Connect component to redux store\nexport default withRouter<any>(connect(mapStateToProps, mapDispatchToProps)(withStyles(styles as any)(localize(LoginComponent, 'locale', CommonAPI.getStateSlice) as any) as any)) as typeof LoginComponent\n\n\n\n// WEBPACK FOOTER //\n// ./src/containers/login/LoginComponent.tsx","import LoginComponent from './LoginComponent'\nexport default LoginComponent\n\n\n\n// WEBPACK FOOTER //\n// ./src/containers/login/index.ts"],"sourceRoot":""}