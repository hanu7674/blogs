{"version":3,"sources":["containers/signup/SignupComponent.tsx","containers/signup/index.ts"],"names":["__WEBPACK_IMPORTED_MODULE_0_react__","__webpack_require__","__WEBPACK_IMPORTED_MODULE_0_react___default","n","__WEBPACK_IMPORTED_MODULE_1_react_redux__","__WEBPACK_IMPORTED_MODULE_2_react_router_redux__","__WEBPACK_IMPORTED_MODULE_3_react_router_dom__","__WEBPACK_IMPORTED_MODULE_4__material_ui_core_Paper__","__WEBPACK_IMPORTED_MODULE_5__material_ui_core_TextField__","__WEBPACK_IMPORTED_MODULE_6__material_ui_core_Button__","__WEBPACK_IMPORTED_MODULE_7__material_ui_core_styles__","__WEBPACK_IMPORTED_MODULE_8_src_config__","__WEBPACK_IMPORTED_MODULE_9_react_localize_redux__","__WEBPACK_IMPORTED_MODULE_10_src_store_actions_authorizeActions__","__WEBPACK_IMPORTED_MODULE_11_src_store_actions_globalActions__","__WEBPACK_IMPORTED_MODULE_12_src_api_StringAPI__","__WEBPACK_IMPORTED_MODULE_13__material_ui_core__","__webpack_exports__","Object","state","ownProps","translate","get","dispatch","showError","message","register","userRegister","loginPage","theme","textField","minWidth","marginTop","contain","margin","paper","minHeight","maxWidth","textAlign","display","[object Object]","props","super","this","handleEmailInputChange","event","target","value","type","checked","name","setState","emailInput","emailInputError","checkInputError","handleFullNameInputChange","fullNameInput","fullNameInputError","handlePasswordInputChange","passwordInput","confirmInputError","passwordInputError","handlePasswordConfirmInputChange","confirmInput","handleForm","error","fullNameCheck","trim","toLowerCase","indexOf","length","isValidEmail","email","password","fullName","bind","classes","a","createElement","container","item","xs","className","settings","appName","elevation","style","padding","paddingLeft","paddingRight","autoFocus","onChange","helperText","label","onClick","variant","color","defineProperty","__WEBPACK_IMPORTED_MODULE_0__SignupComponent__"],"mappings":"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","file":"static/js/1.e2ab163f.chunk.js","sourcesContent":["// - Import react components\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { push } from 'react-router-redux'\nimport { NavLink, withRouter } from 'react-router-dom'\nimport Paper from '@material-ui/core/Paper'\nimport TextField from '@material-ui/core/TextField'\nimport RaisedButton from '@material-ui/core/Button'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core/styles'\nimport config from 'src/config'\nimport { getTranslate, getActiveLanguage } from 'react-localize-redux'\n\n// - Import actions\nimport * as authorizeActions from 'src/store/actions/authorizeActions'\nimport * as globalActions from 'src/store/actions/globalActions'\n\n// - Import app API\nimport StringAPI from 'src/api/StringAPI'\n\nimport { ISignupComponentProps } from './ISignupComponentProps'\nimport { ISignupComponentState } from './ISignupComponentState'\nimport { UserRegisterModel } from 'src/models/users/userRegisterModel'\nimport { Grid } from '@material-ui/core'\n\nconst styles = (theme: any) => ({\n  textField: {\n    minWidth: 280,\n    marginTop: 20\n\n  },\n  contain: {\n    margin: '0 auto'\n  },\n  paper: {\n    minHeight: 370,\n    maxWidth: 450,\n    minWidth: 337,\n    textAlign: 'center',\n    display: 'block',\n    margin: 'auto'\n  }\n})\n\n// - Create Signup component class\nexport class SignupComponent extends Component<ISignupComponentProps, ISignupComponentState> {\n\n  /**\n   * Component constructor\n   * @param  {object} props is an object properties of component\n   */\n  constructor(props: ISignupComponentProps) {\n    super(props)\n\n    this.state = {\n      fullNameInput: '',\n      fullNameInputError: '',\n      emailInput: '',\n      emailInputError: '',\n      passwordInput: '',\n      passwordInputError: '',\n      confirmInput: '',\n      confirmInputError: ''\n    }\n    // Binding function to `this`\n    this.handleForm = this.handleForm.bind(this)\n\n  }\n\n  /**\n   * Handle data on input change\n   * @param  {event} evt is an event of inputs of element on change\n   */\n  handleEmailInputChange = (event: any) => {\n    const target = event.target\n    const value = target.type === 'checkbox' ? target.checked : target.value\n    const name = target.name\n    this.setState({\n      emailInput: value,\n    })\n\n    switch (event) {\n      case 'emailInput':\n        this.setState({\n          emailInputError: ''\n        })\n        break\n      case 'checkInput':\n        this.setState({\n          checkInputError: ''\n        })\n        break\n      default:\n    }\n  }\n  handleFullNameInputChange = (event: any) => {\n    const target = event.target\n    const value = target.type === 'checkbox' ? target.checked : target.value\n    const name = target.name\n    this.setState({\n      fullNameInput: value\n    })\n    switch (event) {\n      case 'fullNameInput':\n        this.setState({\n          fullNameInputError: ''\n        })\n        break\n      case 'checkInput':\n        this.setState({\n          checkInputError: ''\n        })\n        break\n      default:\n\n    }\n  }\n  handlePasswordInputChange = (event: any) => {\n    const target = event.target\n    const value = target.type === 'checkbox' ? target.checked : target.value\n    const name = target.name\n    this.setState({\n      passwordInput: value\n    })\n    switch (event) {\n      case 'passwordInput':\n        this.setState({\n          confirmInputError: '',\n          passwordInputError: ''\n        })\n        break\n      case 'checkInput':\n        this.setState({\n          checkInputError: ''\n        })\n        break\n      default:\n\n    }\n  }\n  handlePasswordConfirmInputChange = (event: any) => {\n    const target = event.target\n    const value = target.type === 'checkbox' ? target.checked : target.value\n    const name = target.name\n    this.setState({\n      confirmInput: value\n    })\n    switch (event) {\n      case 'confirmInput':\n        this.setState({\n          confirmInputError: '',\n          passwordInputError: ''\n        })\n        break\n      case 'checkInput':\n        this.setState({\n          checkInputError: ''\n        })\n        break\n      default:\n\n    }\n  }\n\n  /**\n   * Handle register form\n   */\n  handleForm = () => {\n\n    const { fullNameInput, emailInput, passwordInput, confirmInput } = this.state\n    const { register, translate } = this.props\n\n    let error = false\n\n    // Validate full name\n    let fullNameCheck = fullNameInput.trim().toLowerCase()\n\n    if (fullNameCheck.indexOf('test') > -1\n      || fullNameCheck.indexOf('demo') > -1\n      || fullNameCheck.indexOf('asd') > -1\n      || fullNameCheck.length < 4) {\n      this.setState({\n        fullNameInputError: translate!('signup.validNameError')\n      })\n      error = true\n    }\n\n    /* Validate email*/\n    if (!StringAPI.isValidEmail(emailInput)) {\n      this.setState({\n        emailInputError: translate!('signup.validEmailError')\n      })\n      error = true\n\n    }\n\n    /* Check password */\n    if (passwordInput === '') {\n      this.setState({\n        passwordInputError: translate!('signup.passwordRequiredError')\n      })\n      error = true\n\n    }\n    if (confirmInput === '') {\n      this.setState({\n        confirmInputError: translate!('signup.confirmRequiredError')\n      })\n      error = true\n\n    } else if (confirmInput !== passwordInput) {\n      this.setState({\n        passwordInputError: translate!('signup.passwordEqualConfirmError'),\n        confirmInputError: translate!('signup.confirmEqualPasswordError')\n      })\n      error = true\n\n    }\n    if (!error) {\n      register!({\n        email: emailInput,\n        password: passwordInput,\n        fullName: fullNameInput\n      })\n    }\n\n  }\n\n  /**\n   * Reneder component DOM\n   * @return {react element} return the DOM which rendered by component\n   */\n  render() {\n\n    const { classes, translate } = this.props\n\n    return (\n\n      <Grid container>\n        <Grid item xs={12} className={classes.contain}>\n          <h1 className='g__app-name'>{config.settings.appName}</h1>\n\n          <div className='animate-bottom'>\n            <Paper className={classes.paper} elevation={1} >\n              <div style={{ padding: '48px 40px 36px' }}>\n                <div style={{\n                  paddingLeft: '40px',\n                  paddingRight: '40px'\n                }}>\n\n                  <h2 className='zoomOutLCorner animated g__paper-title'>{translate!('signup.title')}</h2>\n                </div>\n\n                <TextField\n                  className={classes.textField}\n                  autoFocus\n                  onChange={this.handleFullNameInputChange}\n                  helperText={this.state.fullNameInputError}\n                  error={this.state.fullNameInputError.trim() !== ''}\n                  name='fullNameInput'\n                  label={translate!('signup.fullNameLabel')}\n                  type='text'\n                /><br />\n                <TextField\n                  className={classes.textField}\n                  onChange={this.handleEmailInputChange}\n                  helperText={this.state.emailInputError}\n                  error={this.state.emailInputError.trim() !== ''}\n                  name='emailInput'\n                  label={translate!('signup.emailLabel')}\n                  type='email'\n                /><br />\n                <TextField\n                  className={classes.textField}\n                  onChange={this.handlePasswordInputChange}\n                  helperText={this.state.passwordInputError}\n                  error={this.state.passwordInputError.trim() !== ''}\n                  name='passwordInput'\n                  label={translate!('signup.passwordLabel')}\n                  type='password'\n                /><br />\n                <TextField\n                  className={classes.textField}\n                  onChange={this.handlePasswordConfirmInputChange}\n                  helperText={this.state.confirmInputError}\n                  error={this.state.confirmInputError.trim() !== ''}\n                  name='confirmInput'\n                  label={translate!('signup.confirmPasswordLabel')}\n                  type='password'\n                /><br />\n                <br />\n                <div className='signup__button-box'>\n                  <div>\n                    <Button onClick={this.props.loginPage}>{translate!('signup.loginButton')}</Button>\n                  </div>\n                  <div>\n                    <Button variant='contained' color='primary' onClick={this.handleForm}>{translate!('signup.createButton')}</Button>\n\n                  </div>\n                </div>\n\n              </div>\n            </Paper>\n          </div>\n        </Grid>\n      </Grid>\n\n    )\n  }\n}\n\n/**\n * Map dispatch to props\n * @param  {func} dispatch is the function to dispatch action to reducers\n * @param  {object} ownProps is the props belong to component\n * @return {object}          props of component\n */\nconst mapDispatchToProps = (dispatch: any, ownProps: ISignupComponentProps) => {\n  return {\n    showError: (message: string) => {\n      dispatch(globalActions.showMessage(message))\n    },\n    register: (userRegister: UserRegisterModel) => {\n      dispatch(authorizeActions.dbSignup(userRegister))\n    },\n    loginPage: () => {\n      dispatch(push('/login'))\n    }\n  }\n}\n\n/**\n * Map state to props\n * @param  {object} state is the obeject from redux store\n * @param  {object} ownProps is the props belong to component\n * @return {object}          props of component\n */\nconst mapStateToProps = (state: any, ownProps: ISignupComponentProps) => {\n  return {\n    translate: getTranslate(state.get('locale')),\n  }\n}\n\n// - Connect component to redux store\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(withStyles(styles as any)(SignupComponent as any) as any) as any)\n\n\n\n// WEBPACK FOOTER //\n// ./src/containers/signup/SignupComponent.tsx","import SignupComponent from './SignupComponent'\nexport default SignupComponent\n\n\n\n// WEBPACK FOOTER //\n// ./src/containers/signup/index.ts"],"sourceRoot":""}